[{"categories":null,"content":"The first passage with the first hugoBlog 简单书写一些内容，纪念我的第一篇博客。 ","date":"2022-10-01","objectID":"/first_post/:0:0","tags":null,"title":"First_post","uri":"/first_post/"},{"categories":null,"content":"Part1：栈 ","date":"0001-01-01","objectID":"/notes/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%92%8C%E7%AE%97%E6%B3%95/:0:0","tags":null,"title":"","uri":"/notes/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%92%8C%E7%AE%97%E6%B3%95/"},{"categories":null,"content":"1、基本方法 1 Boolean empty测试堆栈是否为空。 2 Object peek( ) 查看堆栈顶部的对象，但不从堆栈中移除它。 3 Object pop( ) 移除堆栈顶部的对象，并作为此函数的值返回该对象。 4 Object push(Object element) 把项压入堆栈顶部。 5 int search(Object element) 返回对象在堆栈中的位置，以 1 为基数。 ","date":"0001-01-01","objectID":"/notes/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%92%8C%E7%AE%97%E6%B3%95/:1:0","tags":null,"title":"","uri":"/notes/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%92%8C%E7%AE%97%E6%B3%95/"},{"categories":null,"content":"2、关于static ","date":"0001-01-01","objectID":"/notes/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%92%8C%E7%AE%97%E6%B3%95/:2:0","tags":null,"title":"","uri":"/notes/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%92%8C%E7%AE%97%E6%B3%95/"},{"categories":null,"content":"无法从static上下文引用非static变量 ​ 即：不能在static方法里调用没有static修饰的东西。因为你还没new对象哪来的不带static的成员和方法。而static优先于类加载，所以可以提前使用。 ","date":"0001-01-01","objectID":"/notes/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%92%8C%E7%AE%97%E6%B3%95/:2:1","tags":null,"title":"","uri":"/notes/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%92%8C%E7%AE%97%E6%B3%95/"},{"categories":null,"content":"静态变量不随这函数调用而改变 静态变量不是说不能修改，不能修改的是常量。它的值是可变的，并且会保持最新的值。说其静态，是因为它不会随着函数的调用和退出而发生变化，即上次你调函数它是什么样，这次还是什么样。 ","date":"0001-01-01","objectID":"/notes/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%92%8C%E7%AE%97%E6%B3%95/:2:2","tags":null,"title":"","uri":"/notes/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%92%8C%E7%AE%97%E6%B3%95/"},{"categories":null,"content":"3、堆栈方法区内存分析 stack（栈） 存放基本类型的数据和对象的引用，即存放变量。 如果存放的是基本类型数据（非静态变量），则直接将变量名和值存入stack中的内存中； 如果是引用类型，则将变量名存入栈，然后指向它new出的对象（存放在堆中）。 heap（堆） 存放new产生的数据。 data segment 也叫作方法区 分为静态域和常量域。 静态域\r存放在对象中用static定义的静态成员（即静态变量，同理，如果该静态变量是基本类型则将变量名和值存入静态域，如果是引用类型则指向new出的对象）。\r常量池\r存放具体的值，也就是变量所代表的值 。\rcode segment 存放代码。 ","date":"0001-01-01","objectID":"/notes/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%92%8C%E7%AE%97%E6%B3%95/:3:0","tags":null,"title":"","uri":"/notes/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%92%8C%E7%AE%97%E6%B3%95/"}]